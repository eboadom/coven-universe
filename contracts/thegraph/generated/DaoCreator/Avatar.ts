// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class GenericCall extends EthereumEvent {
  get params(): GenericCall__Params {
    return new GenericCall__Params(this);
  }
}

export class GenericCall__Params {
  _event: GenericCall;

  constructor(event: GenericCall) {
    this._event = event;
  }

  get _contract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _success(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class SendEther extends EthereumEvent {
  get params(): SendEther__Params {
    return new SendEther__Params(this);
  }
}

export class SendEther__Params {
  _event: SendEther;

  constructor(event: SendEther) {
    this._event = event;
  }

  get _amountInWei(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExternalTokenTransfer extends EthereumEvent {
  get params(): ExternalTokenTransfer__Params {
    return new ExternalTokenTransfer__Params(this);
  }
}

export class ExternalTokenTransfer__Params {
  _event: ExternalTokenTransfer;

  constructor(event: ExternalTokenTransfer) {
    this._event = event;
  }

  get _externalToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ExternalTokenTransferFrom extends EthereumEvent {
  get params(): ExternalTokenTransferFrom__Params {
    return new ExternalTokenTransferFrom__Params(this);
  }
}

export class ExternalTokenTransferFrom__Params {
  _event: ExternalTokenTransferFrom;

  constructor(event: ExternalTokenTransferFrom) {
    this._event = event;
  }

  get _externalToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ExternalTokenApproval extends EthereumEvent {
  get params(): ExternalTokenApproval__Params {
    return new ExternalTokenApproval__Params(this);
  }
}

export class ExternalTokenApproval__Params {
  _event: ExternalTokenApproval;

  constructor(event: ExternalTokenApproval) {
    this._event = event;
  }

  get _externalToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReceiveEther extends EthereumEvent {
  get params(): ReceiveEther__Params {
    return new ReceiveEther__Params(this);
  }
}

export class ReceiveEther__Params {
  _event: ReceiveEther;

  constructor(event: ReceiveEther) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MetaData extends EthereumEvent {
  get params(): MetaData__Params {
    return new MetaData__Params(this);
  }
}

export class MetaData__Params {
  _event: MetaData;

  constructor(event: MetaData) {
    this._event = event;
  }

  get _metaData(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Avatar__genericCallResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromBoolean(this.value0));
    map.set("value1", EthereumValue.fromBytes(this.value1));
    return map;
  }
}

export class Avatar extends SmartContract {
  static bind(address: Address): Avatar {
    return new Avatar("Avatar", address);
  }

  orgName(): string {
    let result = super.call("orgName", []);

    return result[0].toString();
  }

  try_orgName(): CallResult<string> {
    let result = super.tryCall("orgName", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  nativeReputation(): Address {
    let result = super.call("nativeReputation", []);

    return result[0].toAddress();
  }

  try_nativeReputation(): CallResult<Address> {
    let result = super.tryCall("nativeReputation", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  nativeToken(): Address {
    let result = super.call("nativeToken", []);

    return result[0].toAddress();
  }

  try_nativeToken(): CallResult<Address> {
    let result = super.tryCall("nativeToken", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  genericCall(
    _contract: Address,
    _data: Bytes,
    _value: BigInt
  ): Avatar__genericCallResult {
    let result = super.call("genericCall", [
      EthereumValue.fromAddress(_contract),
      EthereumValue.fromBytes(_data),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);

    return new Avatar__genericCallResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_genericCall(
    _contract: Address,
    _data: Bytes,
    _value: BigInt
  ): CallResult<Avatar__genericCallResult> {
    let result = super.tryCall("genericCall", [
      EthereumValue.fromAddress(_contract),
      EthereumValue.fromBytes(_data),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Avatar__genericCallResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  sendEther(_amountInWei: BigInt, _to: Address): boolean {
    let result = super.call("sendEther", [
      EthereumValue.fromUnsignedBigInt(_amountInWei),
      EthereumValue.fromAddress(_to)
    ]);

    return result[0].toBoolean();
  }

  try_sendEther(_amountInWei: BigInt, _to: Address): CallResult<boolean> {
    let result = super.tryCall("sendEther", [
      EthereumValue.fromUnsignedBigInt(_amountInWei),
      EthereumValue.fromAddress(_to)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  externalTokenTransfer(
    _externalToken: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("externalTokenTransfer", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);

    return result[0].toBoolean();
  }

  try_externalTokenTransfer(
    _externalToken: Address,
    _to: Address,
    _value: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("externalTokenTransfer", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  externalTokenTransferFrom(
    _externalToken: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("externalTokenTransferFrom", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);

    return result[0].toBoolean();
  }

  try_externalTokenTransferFrom(
    _externalToken: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("externalTokenTransferFrom", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  externalTokenApproval(
    _externalToken: Address,
    _spender: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("externalTokenApproval", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_spender),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);

    return result[0].toBoolean();
  }

  try_externalTokenApproval(
    _externalToken: Address,
    _spender: Address,
    _value: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("externalTokenApproval", [
      EthereumValue.fromAddress(_externalToken),
      EthereumValue.fromAddress(_spender),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  metaData(_metaData: string): boolean {
    let result = super.call("metaData", [EthereumValue.fromString(_metaData)]);

    return result[0].toBoolean();
  }

  try_metaData(_metaData: string): CallResult<boolean> {
    let result = super.tryCall("metaData", [
      EthereumValue.fromString(_metaData)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _orgName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _nativeToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nativeReputation(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class GenericCallCall extends EthereumCall {
  get inputs(): GenericCallCall__Inputs {
    return new GenericCallCall__Inputs(this);
  }

  get outputs(): GenericCallCall__Outputs {
    return new GenericCallCall__Outputs(this);
  }
}

export class GenericCallCall__Inputs {
  _call: GenericCallCall;

  constructor(call: GenericCallCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class GenericCallCall__Outputs {
  _call: GenericCallCall;

  constructor(call: GenericCallCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get returnValue(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class SendEtherCall extends EthereumCall {
  get inputs(): SendEtherCall__Inputs {
    return new SendEtherCall__Inputs(this);
  }

  get outputs(): SendEtherCall__Outputs {
    return new SendEtherCall__Outputs(this);
  }
}

export class SendEtherCall__Inputs {
  _call: SendEtherCall;

  constructor(call: SendEtherCall) {
    this._call = call;
  }

  get _amountInWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SendEtherCall__Outputs {
  _call: SendEtherCall;

  constructor(call: SendEtherCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExternalTokenTransferCall extends EthereumCall {
  get inputs(): ExternalTokenTransferCall__Inputs {
    return new ExternalTokenTransferCall__Inputs(this);
  }

  get outputs(): ExternalTokenTransferCall__Outputs {
    return new ExternalTokenTransferCall__Outputs(this);
  }
}

export class ExternalTokenTransferCall__Inputs {
  _call: ExternalTokenTransferCall;

  constructor(call: ExternalTokenTransferCall) {
    this._call = call;
  }

  get _externalToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExternalTokenTransferCall__Outputs {
  _call: ExternalTokenTransferCall;

  constructor(call: ExternalTokenTransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExternalTokenTransferFromCall extends EthereumCall {
  get inputs(): ExternalTokenTransferFromCall__Inputs {
    return new ExternalTokenTransferFromCall__Inputs(this);
  }

  get outputs(): ExternalTokenTransferFromCall__Outputs {
    return new ExternalTokenTransferFromCall__Outputs(this);
  }
}

export class ExternalTokenTransferFromCall__Inputs {
  _call: ExternalTokenTransferFromCall;

  constructor(call: ExternalTokenTransferFromCall) {
    this._call = call;
  }

  get _externalToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ExternalTokenTransferFromCall__Outputs {
  _call: ExternalTokenTransferFromCall;

  constructor(call: ExternalTokenTransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExternalTokenApprovalCall extends EthereumCall {
  get inputs(): ExternalTokenApprovalCall__Inputs {
    return new ExternalTokenApprovalCall__Inputs(this);
  }

  get outputs(): ExternalTokenApprovalCall__Outputs {
    return new ExternalTokenApprovalCall__Outputs(this);
  }
}

export class ExternalTokenApprovalCall__Inputs {
  _call: ExternalTokenApprovalCall;

  constructor(call: ExternalTokenApprovalCall) {
    this._call = call;
  }

  get _externalToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExternalTokenApprovalCall__Outputs {
  _call: ExternalTokenApprovalCall;

  constructor(call: ExternalTokenApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class MetaDataCall extends EthereumCall {
  get inputs(): MetaDataCall__Inputs {
    return new MetaDataCall__Inputs(this);
  }

  get outputs(): MetaDataCall__Outputs {
    return new MetaDataCall__Outputs(this);
  }
}

export class MetaDataCall__Inputs {
  _call: MetaDataCall;

  constructor(call: MetaDataCall) {
    this._call = call;
  }

  get _metaData(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class MetaDataCall__Outputs {
  _call: MetaDataCall;

  constructor(call: MetaDataCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
