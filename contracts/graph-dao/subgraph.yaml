specVersion: 0.0.1
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Avatar
    network: development
    source:
      address: '0x46E4459E27Eb7e03faC3A0CAc2Fe15EfEeAc0215'
      abi: Avatar
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: src/mappings/Avatar/mapping.ts
      entities:
        - AvatarContract
      abis:
        - name: Avatar
          file: ./abis/Avatar.json
      eventHandlers:
        - event: 'SendEther(uint256,indexed address)'
          handler: handleSendEth
        - event: 'ReceiveEther(indexed address,uint256)'
          handler: handleReceiveEth
        - event: 'OwnershipTransferred(indexed address,indexed address)'
          handler: handleOwnershipTransferred
  - kind: ethereum/contract
    name: Controller
    network: development
    source:
      address: '0xe2FE8cb37DD1866267888ba8F85BF083A0828Df5'
      abi: Controller
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: src/mappings/Controller/mapping.ts
      entities:
        - ControllerOrganization
        - ControllerScheme
        - ControllerGlobalConstraint
        - ControllerRegisterScheme
        - ControllerUnregisterScheme
        - ControllerUpgradeController
        - ControllerAddGlobalConstraint
        - ControllerRemoveGlobalConstraint
      abis:
        - name: Controller
          file: ./abis/Controller.json
        - name: Avatar
          file: ./abis/Avatar.json
        - name: Reputation
          file: ./abis/Reputation.json
        - name: DAOToken
          file: ./abis/DAOToken.json
        - name: SchemeRegistrar
          file: ./abis/SchemeRegistrar.json
        - name: ContributionReward
          file: ./abis/ContributionReward.json
        - name: GenericScheme
          file: ./abis/GenericScheme.json
        # - name: GenesisProtocol TODO change for QuorumVote
        #   file: ./abis/GenesisProtocol.json TODO change for QuorumVote
      eventHandlers:
        - event: 'RegisterScheme(indexed address,indexed address)'
          handler: handleRegisterScheme
        - event: 'UnregisterScheme(indexed address,indexed address)'
          handler: handleUnregisterScheme
        - event: 'UpgradeController(indexed address,address)'
          handler: handleUpgradeController
        - event: 'AddGlobalConstraint(indexed address,bytes32,uint8)'
          handler: handleAddGlobalConstraint
        - event: 'RemoveGlobalConstraint(indexed address,uint256,bool)'
          handler: handleRemoveGlobalConstraint
  - kind: ethereum/contract
    name: DAOToken
    network: development
    source:
      address: '0x40b0f1e9A79675771BaC768A533EF2092DbEeaA5'
      abi: DAOToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: src/mappings/DAOToken/mapping.ts
      entities:
        - TokenHolder
        - TokenTransfer
        - TokenApproval
      abis:
        - name: DAOToken
          file: ./abis/DAOToken.json
      eventHandlers:
        - event: 'Approval(indexed address,indexed address,uint256)'
          handler: handleApproval
        - event: 'Transfer(indexed address,indexed address,uint256)'
          handler: handleTransfer
        - event: 'OwnershipTransferred(indexed address,indexed address)'
          handler: handleOwnershipTransferred
  - kind: ethereum/contract
    name: Reputation
    network: development
    source:
      address: '0x239bBc88595316600518fe22164bE16D9528aE4f'
      abi: Reputation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: src/mappings/Reputation/mapping.ts
      entities:
        - ReputationContract
        - ReputationHolder
        - ReputationMint
        - ReputationBurn
      abis:
        - name: Reputation
          file: ./abis/Reputation.json
      eventHandlers:
        - event: 'Mint(indexed address,uint256)'
          handler: handleMint
        - event: 'Burn(indexed address,uint256)'
          handler: handleBurn
