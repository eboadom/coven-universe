/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import {Contract, ContractOptions, EventOptions} from "web3-eth-contract";
import {EventLog} from "web3-core";
import {EventEmitter} from "events";
import {Callback, TransactionObject, ContractEvent} from "./types";

export class GlobalConstraintMock extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    testParams(
      arg0: string | number[]
    ): TransactionObject<{
      pre: boolean;
      post: boolean;
      0: boolean;
      1: boolean;
    }>;

    pre(
      arg0: string,
      arg1: string | number[],
      method: string | number[]
    ): TransactionObject<boolean>;

    post(
      arg0: string,
      arg1: string | number[],
      method: string | number[]
    ): TransactionObject<boolean>;

    setConstraint(
      method: string | number[],
      pre: boolean,
      post: boolean
    ): TransactionObject<boolean>;

    currentCallPhase(): TransactionObject<BN>;
    when(): TransactionObject<BN>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
