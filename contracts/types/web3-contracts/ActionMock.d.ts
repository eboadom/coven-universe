/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import {Contract, ContractOptions, EventOptions} from "web3-eth-contract";
import {EventLog} from "web3-core";
import {EventEmitter} from "events";
import {Callback, TransactionObject, ContractEvent} from "./types";

export class ActionMock extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    test3(): TransactionObject<void>;

    test(
      _a: number | string,
      _b: string,
      _c: string | number[]
    ): TransactionObject<BN>;

    test2(_addr: string): TransactionObject<boolean>;

    withoutReturnValue(_addr: string): TransactionObject<void>;

    setActivationTime(
      _activationTime: number | string
    ): TransactionObject<void>;

    activationTime(): TransactionObject<BN>;
  };
  events: {
    WithoutReturnValue: ContractEvent<string>;
    ReceiveEther: ContractEvent<{
      _sender: string;
      _value: BN;
      0: string;
      1: BN;
    }>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
