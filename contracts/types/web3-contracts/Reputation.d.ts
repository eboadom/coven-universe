/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import {Contract, ContractOptions, EventOptions} from "web3-eth-contract";
import {EventLog} from "web3-core";
import {EventEmitter} from "events";
import {Callback, TransactionObject, ContractEvent} from "./types";

export class Reputation extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    balanceOf(_owner: string): TransactionObject<BN>;

    balanceOfAt(
      _owner: string,
      _blockNumber: number | string
    ): TransactionObject<BN>;

    totalSupplyAt(_blockNumber: number | string): TransactionObject<BN>;

    renounceOwnership(): TransactionObject<void>;

    transferOwnership(newOwner: string): TransactionObject<void>;

    mint(_user: string, _amount: number | string): TransactionObject<boolean>;

    burn(_user: string, _amount: number | string): TransactionObject<boolean>;

    decimals(): TransactionObject<BN>;
    owner(): TransactionObject<string>;
    isOwner(): TransactionObject<boolean>;
    totalSupply(): TransactionObject<BN>;
  };
  events: {
    Mint: ContractEvent<{
      _to: string;
      _amount: BN;
      0: string;
      1: BN;
    }>;
    Burn: ContractEvent<{
      _from: string;
      _amount: BN;
      0: string;
      1: BN;
    }>;
    OwnershipTransferred: ContractEvent<{
      previousOwner: string;
      newOwner: string;
      0: string;
      1: string;
    }>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
