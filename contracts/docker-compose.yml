version: '3.5'

networks:
  overlay:

volumes:
  redis_data:
    driver: local
  graph_pg_data:
    driver: local
  graph_ipfs_data:
    driver: local

x-graph-pg-base: &graph-pg-base
  POSTGRES_USER: graph-node
  POSTGRES_PASSWORD: let-me-in
  POSTGRES_DB: graph-node
  postgres_user: graph-node
  postgres_pass: let-me-in
  postgres_db: graph-node


x-contract-base: &contract-base
  image: node:12
  working_dir: /src
  restart: always
  volumes:
    - ./:/src
  networks:
    - overlay
  environment:
    ETH_NETWORK: "development"
    # GANACHE
    GANACHE_URL: "http://ganache:8545"
    URL_ETHEREUM_HTTP_PROVIDER_DEVELOPMENT: "http://ganache:8545"
    URL_ETHEREUM_WS_PROVIDER_DEVELOPMENT: "wss://ganache:8545"
    # RINKEBY
    MNEMONIC_TRUFFLE_RINKEBY: ""
    PK_TRUFFLE_RINKEBY: ""
    HDWALLET_ADDRESS_RINKEBY: ""
    URL_ETHEREUM_HTTP_PROVIDER_RINKEBY: "https://rinkeby.infura.io/v3/3f9d1321a68b41a092b3b4e404d3e537"
    URL_ETHEREUM_WS_PROVIDER_RINKEBY: "wss://rinkeby.infura.io/v3/3f9d1321a68b41a092b3b4e404d3e537"
    # KOVAN
    MNEMONIC_TRUFFLE_KOVAN: ""
    PK_TRUFFLE_KOVAN: ""
    HDWALLET_ADDRESS_KOVAN: ""
    URL_ETHEREUM_HTTP_PROVIDER_KOVAN: "https://kovan.infura.io/v3/3f9d1321a68b41a092b3b4e404d3e537"
    URL_ETHEREUM_WS_PROVIDER_KOVAN: "wss://kovan.infura.io/v3/3f9d1321a68b41a092b3b4e404d3e537"


services:
  contracts-env:
    <<: *contract-base
    command: npm run sys:start-dev-container

  contracts-api:
    <<: *contract-base
    command: npm run sys:start-api-server
    ports:
      - "12040:12040"

  ganache:
    image: trufflesuite/ganache-cli
    command: ["ganache-cli", "--gasLimit", "8000000", "--mnemonic", "soldier moment mix trumpet word decline pulp confirm nice tree eyebrow world"] #,"--blockTime", "1"]
    networks:
      - overlay
    ports:
      - "8545:8545"

  redis:
    image: redis:latest
    networks:
      - overlay
    volumes:
      - type: volume
        source: redis_data
        target: /data

  graph-node:
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
    networks:
      - overlay
    environment:
      <<: *graph-pg-base
      postgres_host: "graph-postgres:5432"
      ipfs: "graph-ipfs:5001"
      ethereum: "mainnet:http://ganache:8545"
      RUST_LOG: "info"

  graph-ipfs:
    image: ipfs/go-ipfs
    networks:
      - overlay
    volumes:
      - type: volume
        source: graph_ipfs_data
        target: /data/ipfs

  graph-postgres:
    image: postgres
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    networks:
      - overlay
    environment:
      <<: *graph-pg-base
    volumes:
      - type: volume
        source: graph_pg_data
        target: /var/lib/postgresql/data
